// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User{
  userId Int @id @default(autoincrement())
  wordLists WordList[]
  email  String @unique @db.VarChar(50)
  username String @unique @db.VarChar(50)
  password String 
  phone String @unique @db.VarChar(50)
  role UserRole @default(student)
  updatedAt Int
  createdAt Int
}



model AssetLibrary{
  mediaId Int @id @default(autoincrement())
  exampleId Int?
  example  Example? @relation(fields: [exampleId],references: [exampleId], onDelete: Cascade)
  filename String
  originalName String
  mimetype String
  size Int
  filePath String
  viewUrl String? @default("")
  aspectRatio Float? @default(1)
  updatedAt Int
  createdAt Int
}

model Word{
  wordId Int @id @default(autoincrement())
  word String
  level WordLevel?
  isPublic  Boolean? @default(false)
  definitions Definition[]
  createdAt Int
  updatedAt Int

  @@unique([word])
}

model Definition{
  definitionId Int @id @default(autoincrement())
  wordId     Int
  word       Word @relation(fields: [wordId],references: [wordId],onDelete: Cascade)
  wordLists   WordList[]
  definition String
  partOfSpeech String?
  examples   Example[]
  createdAt  Int
  updatedAt  Int 
}

model Example{
  exampleId Int @id @default(autoincrement())
  example String
  definitionId Int
  definition Definition @relation(fields: [definitionId],references: [definitionId],onDelete: Cascade)
  images     AssetLibrary[]
  createdAt  Int
  updatedAt  Int 
}

model WordList{
  wordListId Int @id @default(autoincrement())
  user User? @relation(fields: [userId],references: [userId])
  userId Int?
  definitions Definition[]
  name String   
  color String @default("")
  updatedAt Int
  createdAt Int

  @@unique([name,userId])
}

enum UserRole{
  admin
  teacher
  student
}

enum WordLevel{
  A1
  A2
  B1
  B2
  C1
  C2
  N
}